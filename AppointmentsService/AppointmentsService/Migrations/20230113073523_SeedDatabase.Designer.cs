// <auto-generated />
using Appoitments.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppointmentsService.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20230113073523_SeedDatabase")]
    partial class SeedDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Appoitments.Domain.Entities.Appoitment", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoctorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResultId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("isComplete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Appoitments");

                    b.HasData(
                        new
                        {
                            Id = "f4559d08-1e40-495d-ae12-fe95efae1fa2",
                            Date = "13.01.2023",
                            DoctorId = "123",
                            PatientId = "123",
                            ServiceId = "123",
                            Time = "10am",
                            isApproved = true,
                            isComplete = false
                        },
                        new
                        {
                            Id = "24f001f6-8ce6-4f8e-874d-9baa095ce13c",
                            Date = "12.01.2023",
                            DoctorId = "204",
                            PatientId = "123",
                            ServiceId = "123",
                            Time = "12am",
                            isApproved = true,
                            isComplete = true
                        },
                        new
                        {
                            Id = "7b0463b0-379e-469a-9e33-452f1bb33be6",
                            Date = "13.01.2023",
                            DoctorId = "123",
                            PatientId = "204",
                            ServiceId = "123",
                            Time = "1pm",
                            isApproved = false,
                            isComplete = false
                        });
                });

            modelBuilder.Entity("Appoitments.Domain.Entities.Result", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AppoitmentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Complaints")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Conclusion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Recomendations")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AppoitmentId")
                        .IsUnique();

                    b.ToTable("Results");
                });

            modelBuilder.Entity("Appoitments.Domain.Entities.Result", b =>
                {
                    b.HasOne("Appoitments.Domain.Entities.Appoitment", "Appoitment")
                        .WithOne("Result")
                        .HasForeignKey("Appoitments.Domain.Entities.Result", "AppoitmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Appoitment");
                });

            modelBuilder.Entity("Appoitments.Domain.Entities.Appoitment", b =>
                {
                    b.Navigation("Result")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
